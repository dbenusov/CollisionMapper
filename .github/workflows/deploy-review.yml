name: deploy-review
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: collision-mapper
  DOCKER_USERNAME: flyingmonkeys1996

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
      - name: "build"
        run: ./gradlew build
      - uses: actions/upload-artifact@v4
        with:
          name: basic-server.jar
          path: applications/basic-server/build/libs/basic-server.jar
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: data-analyzer-server.jar
          path: applications/data-analyzer-server/build/libs/data-analyzer-server.jar
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: data-collector-server.jar
          path: applications/data-collector-server/build/libs/data-collector-server.jar
          retention-days: 1
  artifact-registry:
    runs-on: ubuntu-latest
    needs: [run-tests]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/setup-gcloud@v2
      - uses: actions/download-artifact@v4
        with:
          name: basic-server.jar
          path: applications/basic-server/build/libs
      - uses: actions/download-artifact@v4
        with:
          name: data-analyzer-server.jar
          path: applications/data-analyzer-server/build/libs
      - uses: actions/download-artifact@v4
        with:
          name: data-collector-server.jar
          path: applications/data-collector-server/build/libs
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag image
      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USERNAME --password-stdin
          IMAGE_ID=$DOCKER_USERNAME/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  basic-server-review:
    runs-on: ubuntu-latest
    needs: [artifact-registry]
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/setup-gcloud@v2
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.5.0
        with:
          credentials_json: ${{ secrets.GOOGLE_KEY }}
      - name: 'Deploy'
        id: 'deploy'
#        uses: 'google-github-actions/deploy-cloudrun@v2'
#        with:
#          service: 'basic-server'
#          image: 'docker.io/flyingmonkeys1996/collision-mapper:latest'
#          env_vars: |-
#            APP=opt/applications/basic-server.jar
        run: |-
          gcloud run deploy basic-server \
            --image=docker.io/flyingmonkeys1996/collision-mapper:latest \
            --allow-unauthenticated \
            --port=8080 \
            --service-account=320300059816-compute@developer.gserviceaccount.com \
            --set-env-vars='APP=opt/applications/basic-server.jar' \
            --region=us-central1 \
            --project=collision-mappter
          gcloud beta run services add-iam-policy-binding --region=us-central1 --member=allUsers --role=roles/run.invoker basic-server

  deploy-data-analyzer-review:
    runs-on: ubuntu-latest
    needs: [artifact-registry]
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/setup-gcloud@v2
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.5.0
        with:
          credentials_json: ${{ secrets.GOOGLE_KEY }}
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud authenticated"

  data-collector-review:
    runs-on: ubuntu-latest
    needs: [artifact-registry]
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/setup-gcloud@v2
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.5.0
        with:
          credentials_json: ${{ secrets.GOOGLE_KEY }}
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud authenticated"
